<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>web.xml注解</TITLE>
<META content="text/html; charset=gb2312" http-equiv=Content-Type>
<META name=GENERATOR content="MSHTML 9.00.8112.16421"></HEAD>
<BODY>
<P>web.xml注解</P>
<DIV 
style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT: medium Simsun; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" 
class=blog_title>
<H3><A href="http://mianhuaman.iteye.com/blog/1105522"><BR 
class=Apple-interchange-newline>web.xml 详细介绍</A><EM class=actions></EM></H3>
<UL class=blog_categories><STRONG>博客分类：</STRONG>
  <LI><A href="http://mianhuaman.iteye.com/category/123496">CoreJava</A></LI></UL>
<DIV class=news_tag><A href="http://www.iteye.com/blogs/tag/Web">Web</A><A 
href="http://www.iteye.com/blogs/tag/XML">XML</A><A 
href="http://www.iteye.com/blogs/tag/Servlet">Servlet</A><A 
href="http://www.iteye.com/blogs/tag/JSP">JSP</A><A 
href="http://www.iteye.com/blogs/tag/Tomcat">Tomcat</A>&nbsp;</DIV></DIV>
<DIV 
style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT: medium Simsun; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" 
id=blog_content class=blog_content>
<P><SPAN 
style="LINE-HEIGHT: 21px; FONT-FAMILY: simsun; COLOR: rgb(50,62,50); FONT-SIZE: 14px"></SPAN></P>
<DIV>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">1、启动一个WEB项目的时候，WEB容器会去读取它的配置文件web.xml，读取&lt;listener&gt;和&lt;context-param&gt;两个结点。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">2、紧急着，容创建一个ServletContext（servlet上下文），这个web项目的所有部分都将共享这个上下文。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">3、容器将&lt;context-param&gt;转换为键值对，并交给servletContext。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">4、容器创建&lt;listener&gt;中的类实例，创建监听器。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><STRONG 
style="FONT-WEIGHT: bold">二 &nbsp;Load-on-startup</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">Load-on-startup 
元素在web应用启动的时候指定了servlet被加载的顺序，它的值必须是一个整数。如果它的值是一个负整数或是这个元素不存在，那么容器会在该servlet被调用的时候，加载这个servlet 
。如果值是正整数或零，容器在配置的时候就加载并初始化这个servlet，容器必须保证值小的先被加载。如果值相等，容器可以自动选择先加载谁。 &nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">在servlet的配置当中，&lt;load-on-startup&gt;5&lt;/load-on-startup&gt;的含义是：&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">标记容器是否在启动的时候就加载这个servlet。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">当值为0或者大于0时，表示容器在应用启动时就加载这个servlet；&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">正数的值越小，启动该servlet的优先级越高。&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><STRONG 
style="FONT-WEIGHT: bold">三 &nbsp;加载顺序</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">首先可以肯定的是，加载顺序与它们在 
web.xml 文件中的先后顺序无关。即不会因为 filter 写在 listener 的前面而会先加载 
filter。最终得出的结论是：ServletContext -&gt;&nbsp;listener -&gt; filter -&gt; 
servlet</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;同时还存在着这样一种配置节：context-param，它用于向 
ServletContext 提供键值对，即应用程序上下文信息。我们的 listener, filter 等在初始化时会用到这些上下文中的信息，那么 
context-param 配置节是不是应该写在 listener 配置节前呢？实际上 context-param 
配置节可写在任意位置，因此真正的加载顺序为：context-param -&gt; listener -&gt; filter -&gt; 
servlet</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对于某类配置节而言，与它们出现的顺序是有关的。以 
filter 为例，web.xml 中当然可以定义多个 filter，与 filter 相关的一个配置节是 
filter-mapping，这里一定要注意，对于拥有相同 filter-name 的 filter 和 filter-mapping 
配置节而言，filter-mapping 必须出现在 filter 之后，否则当解析到 filter-mapping 时，它所对应的 filter-name 
还未定义。web 容器启动时初始化每个 filter 时，是按照 filter 配置节出现的顺序来初始化的，当请求资源匹配多个 filter-mapping 
时，filter 拦截资源是按照 filter-mapping 配置节出现的顺序来依次调用 doFilter() 方法的。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;servlet 
同 filter 类似，此处不再赘述。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由此，可以看出，web.xml 
的加载顺序是：ServletContext -&gt;&nbsp;context-param -&gt; listener -&gt; filter -&gt; 
servlet ，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><STRONG 
style="FONT-WEIGHT: bold">四 &nbsp;web.xml文件详解&nbsp;</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">我将自己知道的web.xml的元素整理了一下：</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">web.xml首先是肯定要包含它的schema.</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;web-app 
xmlns="<A style="COLOR: rgb(0,107,173); TEXT-DECORATION: " 
href="http://java.sun.com/xml/ns/j2ee">http://java.sun.com/xml/ns/j2ee</A>"<BR>&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi="<A 
style="COLOR: rgb(0,107,173); TEXT-DECORATION: " 
href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</A>"<BR>&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation="<A 
style="COLOR: rgb(0,107,173); TEXT-DECORATION: " 
href="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd</A>"<BR>&nbsp;&nbsp;&nbsp;&nbsp;version="2.4"&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;/web-app&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">其它的元素都放在&lt;web-app&gt;&lt;/web-app&gt;之中。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;discription&gt;&lt;/discription&gt; 
是对站台的描述<BR>&lt;display-name&gt;&lt;/display-name&gt; 
定义站台的名称<BR>&lt;distributable/&gt; 是指定该站台是否可分布式处理</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR><STRONG 
style="FONT-WEIGHT: bold">&lt;context-param&gt;&lt;/context-param&gt; 
用来设定web站台的环境参数，它包含两个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;&lt;/param-name&gt; 
用来指定参数的名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;&lt;/param-value&gt; 
用来设定参数值</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;context-param&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;my_param&lt;/param-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;hello&lt;/param-value&gt;<BR>&lt;/context-param&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><STRONG 
style="FONT-WEIGHT: bold">在此设定的参数，可以在servlet中用 
getServletContext().getInitParameter("my_param") 来取得</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR><STRONG 
style="FONT-WEIGHT: bold">&lt;filter&gt;&lt;/filter&gt; 
是用来声明filter的相关设定，它包含以下子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;&lt;/filter-name&gt; 
这当然就是指定filter的名字<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-class&gt;&lt;/filter-class&gt; 
这是用来定义filter的类的名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&lt;/init-param&gt; 
用来定义参数，它有两个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;&lt;/param-name&gt; 
用来指定参数的名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;&lt;/param-value&gt; 
用来设定参数值</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;filter&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-class&gt;com.myTest.setCharacterEncodingFilter&lt;/filter-class&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;encoding&lt;/param-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;GB2312&lt;/param-value&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;<BR>&lt;/filter&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><STRONG 
style="FONT-WEIGHT: bold">与&lt;filter&gt;&lt;/filter&gt;同时使用的是&lt;filter-mapping&gt;&lt;/filter-mapping&gt; 
用来定义filter所对应的URL，它有两个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;&lt;/filter-name&gt; 
指定filter的名字<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;&lt;/url-pattern&gt; 
指定filter所对应的URL</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/*&lt;/url-pattern&gt;<BR>&lt;/filter-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR><STRONG 
style="FONT-WEIGHT: bold">&lt;listener&gt;&lt;/listener&gt; 
用来设定Listener接口，它的主要子元素为<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;listener-class&gt;&lt;/listener-class&gt; 
定义Listener的类名称</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><STRONG 
style="FONT-WEIGHT: bold">比如：<BR>&lt;listener&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;listener-class&gt;com.myTest.ContextListener&lt;/listener-class&gt;&nbsp;<BR>&lt;/listener&gt;</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR><STRONG 
style="FONT-WEIGHT: bold">&lt;servlet&gt;&lt;/servlet&gt; 
用来声明一个servlet的数据，主要有以下子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;&lt;/servlet-name&gt; 
指定servlet的名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;&lt;/servlet-class&gt; 
指定servlet的类名称</STRONG><BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;jsp-file&gt;&lt;/jsp-file&gt; 
指定web站台中的某个JSP网页的完整路径<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&lt;/init-param&gt; 
用来定义参数，和前面的&lt;init-param&gt;差不多</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">同样，<STRONG 
style="FONT-WEIGHT: bold">与&lt;servlet&gt;&lt;/servlet&gt;一起使用的是&lt;servlet-mapping&gt;&lt;/servlet-mapping&gt; 
用来定义servlet所对应的URL，包含两个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;&lt;/servlet-name&gt; 
指定servlet的名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;&lt;/url-pattern&gt; 
指定servlet所对应的URL</STRONG></P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;servlet&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;ShoppingServlet&lt;/servlet-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;com.myTest.ShoppingServlet&lt;/servlet-class&gt;<BR>&lt;/servlet&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;servlet-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;ShoppingServlet&lt;/servlet-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/shop/ShoppingServlet&lt;/url-pattern&gt;<BR>&lt;/servlet-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;session-config&gt;&lt;/session-config&gt; 
用来定义web站台中的session参数，包含一个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;session-timeout&gt;&lt;/session-timeout&gt; 
用来定义这个web站台所有session的有效期限，单位为&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分钟</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;mime-mapping&gt;&lt;/mime-mapping&gt; 
定义某一个扩展名和某一个MIME 
Type做对映，包含两个&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;extension&gt;&lt;/extension&gt; 
扩展名的名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mime-type&gt;&lt;/mime-type&gt; MIME格式</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;mime-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;extension&gt;doc&lt;/extension&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mime-type&gt;application/vnd.ms-word&lt;/mime-type&gt;<BR>&lt;/mime-mapping&gt;&nbsp;<BR>&lt;mime-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;extension&gt;xls&lt;/extension&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mime-type&gt;application/vnd.ms-excel&lt;/mime-type&gt;<BR>&lt;/mime-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;welcome-file-list&gt;&lt;/welcom-file-list&gt; 
用来定义首页的列单，包含一个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;&lt;/welcome-file&gt; 
指定首页的文件名称</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;welcome-file-list&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;index.html&lt;/welcome-file&gt;<BR>&lt;/welcom-file-list&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;error-page&gt;&lt;/error-page&gt; 
用来处理错误代码或异常的页面，有三个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;error-code&gt;&lt;/error-code&gt; 
指定错误代码<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;exception-type&gt;&lt;/exception-type&gt; 
指定一个JAVA异常类型<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;location&gt;&lt;/location&gt; 
指定在web站台内的相关资源路径</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;error-page&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;error-code&gt;404&lt;/error-code&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;location&gt;/error404.jsp&lt;/location&gt;<BR>&lt;/error-page&gt;<BR>&lt;error-page&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;exception-type&gt;java.lang.Exception&lt;/exception-type&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;location&gt;/exception.jsp&lt;/location&gt;<BR>&lt;/error-page&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;taglib&gt;&lt;/taglib&gt; 
用来设定JSP网页所用到的Tag 
Library路径，有两个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;&lt;/taglib-uri&gt; 
定义TLD文件的URI，在JSP网页中用taglib指令便可取得该URI的&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLD文件<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;&lt;/taglib-location&gt; 
指定TLD文件相对于web站台的存放位置</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如：<BR>&lt;taglib&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;myTaglib&lt;/taglib-uri&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tlds/MyTaglib.tld&lt;/taglib-location&gt;<BR>&lt;/taglib&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;resource-ref&gt;&lt;/resource-ref&gt; 
定义利用JNDI取得站台可利用的资源，有五个子元素：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;&lt;/description&gt; 
资源说明<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;rec-ref-name&gt;&lt;/rec-ref-name&gt; 
资源名称<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-type&gt;&lt;/res-type&gt; 
资源种类<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-auth&gt;&lt;/res-auth&gt; 
资源经由Application或Container来许可<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-sharing-scope&gt;&lt;/res-sharing-scope&gt; 
资源是否可以共享，有Shareable和Unshareable两个&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;值，默认为Shareable</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">比如，配置数据库连接池就可在此配置：<BR>&lt;resource-ref&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;JNDI 
JDBC DataSource of 
shop&lt;/description&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-ref-name&gt;jdbc/sample_db&lt;/res-ref-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-auth&gt;Container&lt;/res-auth&gt;<BR>&lt;/resource-ref&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&lt;jsp-config&gt; 
包括&lt;taglib&gt; 和&lt;jsp-property-group&gt; 
两个子元素。<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;其中&lt;taglib&gt;元素在JSP 
1.2时就已经存在；而&lt;jsp-property-group&gt;是JSP 2.0 
新增的元素。<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;jsp-property-group&gt;元素主要有八个子元素，它们分别为：<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;1.&lt;description&gt;：设定的说明；<BR>&nbsp;&nbsp;&nbsp;&nbsp;2.&lt;display-name&gt;：设定名称；<BR>&nbsp;&nbsp;&nbsp;&nbsp;3.&lt;url-pattern&gt;：设定值所影响的范围，如：/CH2 
或 /*.jsp；<BR>&nbsp;&nbsp;&nbsp;&nbsp;4.&lt;el-ignored&gt;：若为true，表示不支持EL 
语法；<BR>&nbsp;&nbsp;&nbsp;&nbsp;5.&lt;scripting-invalid&gt;：若为true，表示不支持&lt;% 
scripting %&gt;语法；<BR>&nbsp;&nbsp;&nbsp;&nbsp;6.&lt;page-encoding&gt;：设定JSP 
网页的编码；<BR>&nbsp;&nbsp;&nbsp;&nbsp;7.&lt;include-prelude&gt;：设置JSP 
网页的抬头，扩展名为.jspf；<BR>&nbsp;&nbsp;&nbsp;&nbsp;8.&lt;include-coda&gt;：设置JSP 
网页的结尾，扩展名为.jspf。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>一个简单的&lt;jsp-config&gt;元素完整配置：</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;jsp-config&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;Taglib&lt;/taglib-uri&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tlds/MyTaglib.tld&lt;/taglib-location&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;jsp-property-group&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;Special 
property group for JSP Configuration JSP 
example.&lt;/description&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;display-name&gt;JSPConfiguration&lt;/display-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/jsp/* 
&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;el-ignored&gt;true&lt;/el-ignored&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;page-encoding&gt;GB2312&lt;/page-encoding&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;scripting-invalid&gt;true&lt;/scripting-invalid&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;include-prelude&gt;/include/prelude.jspf&lt;/include-prelude&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;include-coda&gt;/include/coda.jspf&lt;/include-coda&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/jsp-property-group&gt;<BR>&lt;/jsp-config&gt;&nbsp;&nbsp;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>配置web.xml来限制对某些servlet的请求</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">有时我们只希望通过认证的用户才能请求某些servlet的话，就可以在web.xml中来进行相应的配置，来达到此目的。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">这就要用到&lt;security-constraint&gt;&lt;/security-constraint&gt;元素。<BR>对于tomcat，中web.xml使用security-constraint元素需要在位于&lt;Tomcat-installation-directory&gt;/conf/tomcat-users.xml的XML文件中创建用户名和密码。比如下面的这个tomcat-users.xml文件：</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;?xml 
version='1.0' 
encoding='utf-8'?&gt;<BR>&lt;tomcat-users&gt;<BR>&nbsp;&nbsp;&lt;role 
rolename="tomcat"/&gt;<BR>&nbsp;&nbsp;&lt;role 
rolename="manager"/&gt;<BR>&nbsp;&nbsp;&lt;role 
rolename="admin"/&gt;<BR>&nbsp;&nbsp;&lt;user username="tomcat" 
password="tomcat" roles="tomcat"/&gt;<BR>&nbsp;&nbsp;&lt;user username="both" 
password="tomcat" roles="tomcat,manager"/&gt;<BR>&nbsp;&nbsp;&lt;user 
username="admin" password="admin" 
roles="admin"/&gt;<BR>&lt;/tomcat-users&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">此XML片段包括一个tomcat-users根元素，它包含一个或多个role和user元素。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>然后在Web应用程序的web.xml中创建security-constraint、login-config和security-role元素。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;security-constraint&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;web-resource-collection&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;web-resource-name&gt;HelloServlet&lt;/web-resource-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/HelloServlet&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;http-method&gt;GET&lt;/http-method&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;http-method&gt;POST&lt;/http-method&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/web-resource-collection&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;auth-constraint&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;This 
applies only to the "tomcat" security 
role&lt;/description&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;role-name&gt;admin&lt;/role-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/auth-constraint&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;user-data-constraint&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;transport-guarantee&gt;NONE&lt;/transport-guarantee&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/user-data-constraint&gt;<BR>&nbsp;&nbsp;&lt;/security-constraint&gt;<BR>&nbsp;&nbsp;<BR>&nbsp;&nbsp;&lt;login-config&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;auth-method&gt;BASIC&lt;/auth-method&gt;<BR>&nbsp;&nbsp;&lt;/login-config&gt;<BR>&nbsp;&nbsp;&lt;security-role&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;role-name&gt;admin&lt;/role-name&gt;<BR>&nbsp;&nbsp;&lt;/security-role&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">其中security-constraint元素包含一个或多个web-resource-collection元素，它是描述Web应用程序中的哪些web资源受到指定安全限制的保护。http-method元素指定安全限制覆盖的HTTP方法。上面的例子中，当我们对/HelloServlet的GET或POST请求时将触发配置的安全机制。<BR>auth-constraint元素用于描述允许访问Web组件的安全角色。此例中安全角色的例子有tomcat、manager、admin。而只有当作为admin角色的用户才可以访问HelloServlet。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">Web应用程序通过login-config元素来认证用户，并确认该用户是否为正确的角色。<BR>longin-config包含的transport-guarantee子元素用来指定认证方法，BASIC是一种常见的Web认证方式，浏览器给用户提示一个对话框，要求输入用户名和密码，随后Tomcat将给出的用户名和密码与tomcat-users.xml中的用户名和密码进行比较，然后使用前面的security-constraint配置来确定用户是否可访问受保护的servlet。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">（除BASIC外，还可以是FORM、CLIENT-CERT、DIGEST等）</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">其实这种认证方法实际上有两个步骤：<BR>1、检查提供的用户名和密码是否正确。<BR>2、判断用户是否映射到特定的安全角色。例如，用户可能提供了正确的用户名和密码，但没有映射到特定的安全角色，也将被禁止访问特定的Web资源。</P><BR><STRONG 
style="FONT-WEIGHT: bold">五 
相应元素配置&nbsp;&nbsp;&nbsp;&nbsp;</STRONG><BR><BR>1、Web应用图标：指出IDE和GUI工具用来表示Web应用的大图标和小图标&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;icon&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;small-icon&gt;/images/app_small.gif&lt;/small-icon&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;large-icon&gt;/images/app_large.gif&lt;/large-icon&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/icon&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>2、Web 
应用名称：提供GUI工具可能会用来标记这个特定的Web应用的一个名称&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;display-name&gt;Tomcat 
Example&lt;/display-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>3、Web 应用描述： 
给出于此相关的说明性文本&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;disciption&gt;Tomcat Example 
servlets and JSP 
pages.&lt;/disciption&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>4、上下文参数：声明应用范围内的初始化参数。&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;context-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;ContextParameter&lt;/para-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;test&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;It 
is a test 
parameter.&lt;/description&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/context-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>在servlet里面可以通过getServletContext().getInitParameter("context/param")得到&nbsp;&nbsp;&nbsp;&nbsp;<BR><BR>5、过滤器配置：将一个名字与一个实现javaxs.servlet.Filter接口的类相关联。&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;filter&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-class&gt;com.myTest.setCharacterEncodingFilter&lt;/filter-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;encoding&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;GB2312&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/filter&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;filter-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/*&lt;/url-pattern&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/filter-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>6、监听器配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;listener&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;listerner-class&gt;listener.SessionListener&lt;/listener-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/listener&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>7、Servlet配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;基本配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;snoop&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;SnoopServlet&lt;/servlet-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;snoop&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/snoop&lt;/url-pattern&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;高级配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;snoop&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;SnoopServlet&lt;/servlet-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;foo&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;bar&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;run-as&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;Security 
role for anonymous 
access&lt;/description&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;role-name&gt;tomcat&lt;/role-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/run-as&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;snoop&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/snoop&lt;/url-pattern&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;元素说明&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet&gt;&lt;/servlet&gt; 
用来声明一个servlet的数据，主要有以下子元素：&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;&lt;/servlet-name&gt; 
指定servlet的名称&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;&lt;/servlet-class&gt; 
指定servlet的类名称&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;jsp-file&gt;&lt;/jsp-file&gt; 
指定web站台中的某个JSP网页的完整路径&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&lt;/init-param&gt; 
用来定义参数，可有多个init-param。在servlet类中通过getInitParamenter(String 
name)方法访问初始化参数&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;load-on-startup&gt;&lt;/load-on-startup&gt;指定当Web应用启动时，装载Servlet的次序。&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当值为负或未定义：Servlet容器将在Web客户首次访问这个servlet时加载它&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-mapping&gt;&lt;/servlet-mapping&gt; 
用来定义servlet所对应的URL，包含两个子元素&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;&lt;/servlet-name&gt; 
指定servlet的名称&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;&lt;/url-pattern&gt; 
指定servlet所对应的URL&nbsp;&nbsp;&nbsp;&nbsp;<BR>8、会话超时配置（单位为分钟）&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;session-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;session-timeout&gt;120&lt;/session-timeout&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/session-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>9、MIME类型配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;mime-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;extension&gt;htm&lt;/extension&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;mime-type&gt;text/html&lt;/mime-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/mime-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>10、指定欢迎文件页配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;welcome-file-list&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;index.html&lt;/welcome-file&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/welcome-file-list&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>11、配置错误页面&nbsp;&nbsp;&nbsp;&nbsp;<BR>一、 
通过错误码来配置error-page&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;error-page&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;error-code&gt;404&lt;/error-code&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;location&gt;/NotFound.jsp&lt;/location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/error-page&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>上面配置了当系统发生404错误时，跳转到错误处理页面NotFound.jsp。&nbsp;&nbsp;&nbsp;&nbsp;<BR>二、通过异常的类型配置error-page&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;error-page&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;exception-type&gt;java.lang.NullException&lt;/exception-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;location&gt;/error.jsp&lt;/location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/error-page&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>上面配置了当系统发生java.lang.NullException（即空指针异常）时，跳转到错误处理页面error.jsp&nbsp;&nbsp;&nbsp;&nbsp;<BR>12、TLD配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;http://jakarta.apache.org/tomcat/debug-taglib&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/jsp/debug-taglib.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;如果MyEclipse一直在报错,应该把&lt;taglib&gt; 
放到 
&lt;jsp-config&gt;中&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;jsp-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;http://jakarta.apache.org/tomcat/debug-taglib&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/pager-taglib.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/jsp-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>13、资源管理对象配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;resource-env-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;resource-env-ref-name&gt;jms/StockQueue&lt;/resource-env-ref-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/resource-env-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>14、资源工厂配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;resource-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-ref-name&gt;mail/Session&lt;/res-ref-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-type&gt;javax.mail.Session&lt;/res-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-auth&gt;Container&lt;/res-auth&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/resource-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;配置数据库连接池就可在此配置：&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;resource-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;JNDI 
JDBC DataSource of 
shop&lt;/description&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-ref-name&gt;jdbc/sample_db&lt;/res-ref-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;res-auth&gt;Container&lt;/res-auth&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/resource-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>15、安全限制配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;security-constraint&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;display-name&gt;Example 
Security 
Constraint&lt;/display-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;web-resource-collection&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;web-resource-name&gt;Protected 
Area&lt;/web-resource-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/jsp/security/protected/*&lt;/url-pattern&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;http-method&gt;DELETE&lt;/http-method&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;http-method&gt;GET&lt;/http-method&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;http-method&gt;POST&lt;/http-method&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;http-method&gt;PUT&lt;/http-method&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/web-resource-collection&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;auth-constraint&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;role-name&gt;tomcat&lt;/role-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;role-name&gt;role1&lt;/role-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/auth-constraint&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/security-constraint&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>16、登陆验证配置&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;login-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;auth-method&gt;FORM&lt;/auth-method&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;realm-name&gt;Example-Based 
Authentiation 
Area&lt;/realm-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form-login-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form-login-page&gt;/jsp/security/protected/login.jsp&lt;/form-login-page&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form-error-page&gt;/jsp/security/protected/error.jsp&lt;/form-error-page&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form-login-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/login-config&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>17、安全角色：security-role元素给出安全角色的一个列表，这些角色将出现在servlet元素内的security-role-ref元素的role-name子元素中。&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;分别地声明角色可使高级IDE处理安全信息更为容易。&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;security-role&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;role-name&gt;tomcat&lt;/role-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/security-role&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>18、Web环境参数：env-entry元素声明Web应用的环境项&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;env-entry&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;env-entry-name&gt;minExemptions&lt;/env-entry-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;env-entry-value&gt;1&lt;/env-entry-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;env-entry-type&gt;java.lang.Integer&lt;/env-entry-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/env-entry&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>19、EJB 
声明&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;ejb-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;Example 
EJB 
reference&lt;/decription&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ejb-ref-name&gt;ejb/Account&lt;/ejb-ref-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ejb-ref-type&gt;Entity&lt;/ejb-ref-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;home&gt;com.mycompany.mypackage.AccountHome&lt;/home&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;remote&gt;com.mycompany.mypackage.Account&lt;/remote&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/ejb-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>20、本地EJB声明&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;ejb-local-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;Example 
Loacal EJB 
reference&lt;/decription&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ejb-ref-name&gt;ejb/ProcessOrder&lt;/ejb-ref-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ejb-ref-type&gt;Session&lt;/ejb-ref-type&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;local-home&gt;com.mycompany.mypackage.ProcessOrderHome&lt;/local-home&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;local&gt;com.mycompany.mypackage.ProcessOrder&lt;/local&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/ejb-local-ref&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>21、配置DWR&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;uk.ltd.getahead.dwr.DWRServlet&lt;/servlet-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/dwr/*&lt;/url-pattern&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>22、配置Struts&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;display-name&gt;Struts 
Blank 
Application&lt;/display-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;action&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.struts.action.ActionServlet&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;detail&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;2&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;debug&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;2&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;config&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;/WEB-INF/struts-config.xml&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;application&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;ApplicationResources&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/init-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;load-on-startup&gt;2&lt;/load-on-startup&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;action&lt;/servlet-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/servlet-mapping&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file-list&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/welcome-file-list&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 
Struts Tag Library Descriptors 
--&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;struts-bean&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tld/struts-bean.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;struts-html&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tld/struts-html.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;struts-nested&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tld/struts-nested.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;struts-logic&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tld/struts-logic.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-uri&gt;struts-tiles&lt;/taglib-uri&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;taglib-location&gt;/WEB-INF/tld/struts-tiles.tld&lt;/taglib-location&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/taglib&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>23、配置Spring（基本上都是在Struts中配置的）&nbsp;&nbsp;&nbsp;&nbsp;<BR><BR>&nbsp;&nbsp;&nbsp;&lt;!-- 
指定spring配置文件位置 
--&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;context-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--加载多个spring配置文件 
--&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/WEB-INF/applicationContext.xml, 
/WEB-INF/action-servlet.xml&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/param-value&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&lt;/context-param&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR><BR>&nbsp;&nbsp;&nbsp;&lt;!-- 
定义SPRING监听器，加载spring 
--&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR><BR>&lt;listener&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/listener&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR><BR>&lt;listener&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;listener-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.springframework.web.context.request.RequestContextListener&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/listener-class&gt;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&lt;/listener&gt;&nbsp;
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 1em 0px 0.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;</P></DIV>
<DIV><BR></DIV>
<DIV>其他说明：</DIV>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">web.xml 
文件中一般包括 servlet, spring, filter, listenr的配置。那么他们是按照一个什么顺序加载呢？</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">加载顺序会影响对spring 
bean 的调用。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;比如filter 
需要用到 bean ，但是加载顺序是 先加载filter 后加载spring，则filter中初始化操作中的bean为null；</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">首先可以肯定 
加载顺序与他们在web.xml 文件中的先后顺序无关。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">web.xml 
中 listener 和 serverlet 的加载顺序为 先 listener 后serverlet</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">最终得出结果：先 
listener &gt;&gt; filter &gt;&gt; servlet &gt;&gt;&nbsp;&nbsp;spring</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;所以，如果过滤器中要使用到 
bean，可以将spring 的加载 改成 Listener的方式</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&lt;listener&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;listener-class&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.springframework.web.context.ContextLoaderListener<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/listener-class&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/listener&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><BR>&nbsp;搞定！</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;关于他们的内部执行顺序，也需要注意，如下面文章中遇到的问题</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">web.xml的filter执行顺序导致的乱码，切记！<BR>2008-05-02 
01:38</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">发现引起bug的原因是web.xml的下面几行：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;CharacterEncoding&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;CharacterEncoding&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">根据servlet2.3规范filter执行是按照web.xml配置的filter-mapping先后顺序进行执行，所以上面的配置会导致遇见*.do的url请求，先进行SecurityFilter的过滤器处理，这时候没有做编码处理，已经是乱码，到下面的filter处理时已经时乱码，再做编码处理已经没有用处。</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">修正方式，调整filter-mapping顺序，如下：</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;CharacterEncoding&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;CharacterEncoding&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter-mapping&gt;</P>
<P 
style="PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-mapping&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter-mapping&gt;</P></DIV></BODY></HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=gb2312">
<META name="GENERATOR" content="QuickCHM">
<TITLE>安卓map遍历</TITLE>
</HEAD>
<BODY>
<P>安卓map遍历</P><PRE style="FONT-SIZE: 10.8pt; FONT-FAMILY: '宋体'; COLOR: #a9b7c6; BACKGROUND-COLOR: #2b2b2b">BuildConfig config = <SPAN style="COLOR: #cc7832">new </SPAN>BuildConfig()<SPAN style="COLOR: #cc7832">;<BR></SPAN>System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">err</SPAN>.println(<SPAN style="COLOR: #6a8759">"===========================================ss=="</SPAN>)<SPAN style="COLOR: #cc7832">;<BR></SPAN>bianLi(config)<SPAN style="COLOR: #cc7832">;<BR></SPAN>System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">err</SPAN>.println(<SPAN style="COLOR: #6a8759">"===========================================ee=="</SPAN>)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832"><BR></SPAN>JSONObject conf = <SPAN style="COLOR: #cc7832">new </SPAN>JSONObject()<SPAN style="COLOR: #cc7832">;<BR></SPAN>Field[] fields = config.getClass().getDeclaredFields()<SPAN style="COLOR: #cc7832">;<BR></SPAN>System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">err</SPAN>.println(<SPAN style="COLOR: #6a8759">"===========================================ss11=="</SPAN>)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">for </SPAN>(Field field:fields) {<BR>   String name = field.getName()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">   </SPAN>String type = field.getType().toString()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">   try </SPAN>{<BR>      <SPAN style="COLOR: #808080">// 获取原来的访问控制权限<BR></SPAN><SPAN style="COLOR: #808080">      </SPAN><SPAN style="COLOR: #cc7832">boolean </SPAN>accessFlag = field.isAccessible()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">      </SPAN><SPAN style="COLOR: #808080">// 修改访问控制权限<BR></SPAN><SPAN style="COLOR: #808080">      </SPAN>field.setAccessible(<SPAN style="COLOR: #cc7832">true</SPAN>)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">      try</SPAN>{<BR>         <FONT style="BACKGROUND-COLOR: #ff0000" color=#ffffff>Object val = field.get(config)</FONT><SPAN style="COLOR: #cc7832"><FONT style="BACKGROUND-COLOR: #ff0000" color=#ffffff>;</FONT><BR></SPAN><SPAN style="COLOR: #cc7832">         try </SPAN>{<BR>            <SPAN style="COLOR: #cc7832">if</SPAN>(type.equals(<SPAN style="COLOR: #6a8759">"interface java.util.Map"</SPAN>)){<BR>              <FONT color=#ffffff> <FONT style="BACKGROUND-COLOR: #cc99ff">Map&lt;String<SPAN style="COLOR: #cc7832">,</SPAN>String&gt; map = <SPAN style="COLOR: #cc7832">new </SPAN>HashMap((Map) val)</FONT></FONT><SPAN style="COLOR: #cc7832"><FONT color=#00ff00><FONT style="BACKGROUND-COLOR: #ff6600"><FONT style="BACKGROUND-COLOR: #cc99ff" color=#ffffff>;</FONT><BR></FONT></FONT></SPAN><SPAN style="COLOR: #cc7832">               </SPAN>JSONObject subjson = <SPAN style="COLOR: #cc7832">new </SPAN>JSONObject()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">               for </SPAN>(String k : map.keySet()) {<BR>                  String v = map.get(k)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">                  </SPAN>subjson.put(k<SPAN style="COLOR: #cc7832">,</SPAN>v)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">                  </SPAN>System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">out</SPAN>.println(k + <SPAN style="COLOR: #6a8759">"==+++++==" </SPAN>+ v)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">               </SPAN>}<BR><BR>               conf.put(name<SPAN style="COLOR: #cc7832">,</SPAN>subjson)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">            </SPAN>}<SPAN style="COLOR: #cc7832">else</SPAN>{<BR>               conf.put(name<SPAN style="COLOR: #cc7832">,</SPAN>val)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">            </SPAN>}<BR>         }<SPAN style="COLOR: #cc7832">catch </SPAN>(JSONException e){<BR>            e.printStackTrace()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">         </SPAN>}<BR>         System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">out</SPAN>.println(conf.toString())<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">         </SPAN>System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">err</SPAN>.println(<SPAN style="COLOR: #6a8759">"BuildConfig对象中包含一个如下的变量：" </SPAN>+ name + <SPAN style="COLOR: #6a8759">" = " </SPAN>+ val)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">      </SPAN>}<SPAN style="COLOR: #cc7832">catch </SPAN>(IllegalAccessException e){<BR>         e.printStackTrace()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">      </SPAN>}<BR>      <SPAN style="COLOR: #808080">// 恢复访问控制权限<BR></SPAN><SPAN style="COLOR: #808080">      </SPAN>field.setAccessible(accessFlag)<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">   </SPAN>}<SPAN style="COLOR: #cc7832">catch </SPAN>(IllegalArgumentException ex){<BR>      ex.printStackTrace()<SPAN style="COLOR: #cc7832">;<BR></SPAN><SPAN style="COLOR: #cc7832">   </SPAN>}<BR>}<BR>System.<SPAN style="COLOR: #9876aa; FONT-STYLE: italic">err</SPAN>.println(<SPAN style="COLOR: #6a8759">"===========================================ee11=="</SPAN>)<SPAN style="COLOR: #cc7832">;</SPAN></PRE><PRE id=t1 style="BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: Consolas, Inconsolata, Courier, monospace; WORD-SPACING: 0px; OVERFLOW-X: auto; TEXT-TRANSFORM: none; WORD-BREAK: break-all; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 24px; LETTER-SPACING: normal; OUTLINE-COLOR: invert; LINE-HEIGHT: 22px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(240,240,240); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">import</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> java.util.HashMap;
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">import</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> java.util.Iterator;
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">import</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> java.util.Map;
</SPAN> 
 <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">public</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">class</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> TestMap {
</SPAN>     <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">public</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">static</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">void</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> main(String[] args) {
</SPAN>         Map&lt;Integer, String&gt; map = <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">new</SPAN> HashMap&lt;Integer, String&gt;<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">();
</SPAN>         map.put(1, "a"<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         map.put(2, "b"<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         map.put(3, "ab"<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         map.put(4, "ab"<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         map.put(4, "ab");<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> 和上面相同 ， 会自己筛选</SPAN>
 <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">        System.out.println(map.size());
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> 第一种：</SPAN>
         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">/*</SPAN>
 <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">         * Set&lt;Integer&gt; set = map.keySet(); //得到所有key的集合
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">         * 
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">         * for (Integer in : set) { String str = map.get(in);
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">         * System.out.println(in + "     " + str); }
</SPAN>          <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">*/</SPAN>
         System.out.println("第一种：通过Map.keySet遍历key和value："<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">for</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> (Integer in : map.keySet()) {
</SPAN>             <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">map.keySet()返回的是所有key的值</SPAN>
             String str = map.get(in);<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">得到每个key多对用value的值</SPAN>
             System.out.println(in + "     " +<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> str);
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">        }
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> 第二种：</SPAN>
         System.out.println("第二种：通过Map.entrySet使用iterator遍历key和value："<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         Iterator&lt;Map.Entry&lt;Integer, String&gt;&gt; it =<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> map.entrySet().iterator();
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">while</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> (it.hasNext()) {
</SPAN>              Map.Entry&lt;Integer, String&gt; entry =<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> it.next();
</SPAN>                System.out.println("key= " + entry.getKey() + " and value= " +<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> entry.getValue());
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">        }
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> 第三种：推荐，尤其是容量大时</SPAN>
         System.out.println("第三种：通过Map.entrySet遍历key和value"<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">for</SPAN> (Map.Entry&lt;Integer, String&gt;<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> entry : map.entrySet()) {
</SPAN>             <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">Map.entry&lt;Integer,String&gt; 映射项（键-值对）  有几个方法：用上面的名字entry
</SPAN>             <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">entry.getKey() ;entry.getValue(); entry.setValue();
</SPAN>             <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">map.entrySet()  返回此映射中包含的映射关系的 Set视图。</SPAN>
             System.out.println("key= " + entry.getKey() + " and value= "
                     +<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> entry.getValue());
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">        }
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">//</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,128,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> 第四种：</SPAN>
         System.out.println("第四种：通过Map.values()遍历所有的value，但不能遍历key"<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">);
</SPAN>         <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,255); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">for</SPAN><SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> (String v : map.values()) {
</SPAN>             System.out.println("value= " +<SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert"> v);
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">        }
</SPAN> <SPAN style="BOX-SIZING: border-box; WORD-BREAK: break-all; COLOR: rgb(0,0,0); OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert">    }
</SPAN> }</PRE>
</BODY>
</HTML>

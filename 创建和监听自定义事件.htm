<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=gb2312">
<META name="GENERATOR" content="QuickCHM">
<TITLE>创建和监听自定义事件</TITLE>
</HEAD>
<BODY>
<P>创建和监听自定义事件</P>
<H2 
style="BORDER-BOTTOM: rgb(226,226,226) 1px solid; TEXT-ALIGN: center; PADDING-BOTTOM: 10px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT-FAMILY: 'Microsoft Yahei', SimSun; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); FONT-SIZE: 22px; WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" 
class=title>创建和监听自定义事件</H2>
<P 
style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 10px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 2em; MARGIN: 0px; PADDING-LEFT: 10px; LETTER-SPACING: normal; PADDING-RIGHT: 10px; FONT-FAMILY: Verdana, 'Microsoft YaHei', SimSun; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,102,0); FONT-SIZE: 14px; BORDER-TOP: rgb(204,204,204) 1px dashed; FONT-WEIGHT: normal; BORDER-RIGHT: rgb(204,204,204) 1px dashed; WORD-SPACING: 0px; PADDING-TOP: 10px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-origin: initial; background-clip: initial; border-image: initial" 
class=summary>做前端开发的筒子们，有没有经常觉得原生的事件类型不够用？今天就来介绍一下如何创建自定义的事件类型吧。 
举个例子，你有没有实现过像长按这样的需求？这是一个挺常见的需求…</P>
<DIV 
style="PADDING-BOTTOM: 0px; OVERFLOW-X: hidden; OVERFLOW-Y: hidden; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 20px 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/28px Verdana, 'Microsoft YaHei', SimSun; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" 
class=content>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&nbsp;做前端开发的筒子们，有没有经常觉得原生的事件类型不够用？今天就来介绍一下如何创建自定义的事件类型吧。</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">举个例子，你有没有实现过像“长按”这样的需求？这是一个挺常见的需求，可是原生的事件类型里并没有它。以前通常的做法是用&nbsp;mousedown&nbsp;和&nbsp;mouseup&nbsp;来模拟。同时监听这两个事件，记录两次事件触发的时间戳，得出按下时长，再决定是否执行后续动作。这个方案还不错，思路清晰，实现容易。</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">好，现在新的需求来了（该死的 
PM！），页面上有两个需要监听长按状态的元素，怎么办？这好办，写具名函数嘛，复用一下还是很容易的。别急，PM 又来了…… 
两个元素触发长按所需的时长不一样，怎么办？时长还要能方便的修改，怎么办？在心里咒骂 PM 
肯定少不了，但需求还是得给他实现了。好，修修改改勉强又能用了。可是这么一看，代码写得真丑啊…… 万一待会 PM 又改需求怎么办？</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">有没有办法把这个需求实现得简单好看又灵活呢？当然可以！创建一个自定义事件吧骚年！</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">在文档对象模型（DOM）中有&nbsp;createEvent，initEvent，dispatchEvent&nbsp;这么一组方法可以很方便的创建，初始化和触发一个自定义的事件。以前面提到的长按需求为例，我们首先需要创建一个事件对象。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">var evt = document.createEvent('Event');</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">在这里我基于最基础的事件模块（Event）创建了一个对象，如果你需要对事件进行精细地控制，可以选择更具体的事件模块（UIEvents、MouseEvents、MutationEvents、HTMLEvents 
等）。</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">接下来就是初始化这个事件，三个参数分别是事件类型（字符串）、是否冒泡（布尔）、是否可取消（布尔）。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">evt.initEvent('longpress', true, true);</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">注意这里初始化事件的方法名跟上一步所选的事件模块是有关的，具体可以参照 
MDN 这个<A style="COLOR: rgb(0,66,118); TEXT-DECORATION: underline" 
href="https://developer.mozilla.org/en/DOM/document.createEvent#Notes" 
target=_blank>表格</A>。</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">然后我们要做的事，就是在特定条件（按下时间超过 
1 秒）下触发这个事件。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">var timer;<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">button.addEventListener('mousedown', function() {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">timer = Date.now();<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">button.addEventListener('mouseup', function() {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">if(Date.now() - timer &gt; 1000) {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">evt.duration = Date.now() - timer;<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">button.dispatchEvent(evt);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">检测鼠标按下和松开之间的时间间隔，大于 
1 秒（1000 
毫秒）则触发自定义的&nbsp;longpress&nbsp;事件。在这个过程中我们还可以为自定义的事件对象增加属性，比如上面例子中的&nbsp;duration&nbsp;属性，即鼠标按下的时长。</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">最后只需要像监听原生的事件那样，监听这个自定义的事件，太简单了。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">button.addEventListener('longpress', function(e) {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">console.log('Pressed for ' + e.duration + ' milliseconds.');<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">到这里就结束了吗？当然没有，别忘了 
PM 的需求，触发事件的时长要可以方便的修改，还要能支持多个实例。</P>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">不过我想你应该也知道要怎么做了，就是把自定义事件的这部分代码包装一下。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">function enableLongPress(target, threshold) {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">var timer;<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">var evt = document.createEvent('Event');<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">evt.initEvent('longpress', true, true);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">target.addEventListener('mousedown', function() {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">timer = Date.now();<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">target.addEventListener('mouseup', function() {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">if(Date.now() - timer &gt; threshold) {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">evt.duration = Date.now() - timer;<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">target.dispatchEvent(evt);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">把需要监听的 
DOM 元素和触发事件的条件作为参数传入，调用这个函数，就完成了事件的自定义。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">enableLongPress(button, 1000);</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">事件的监听部分完全不用改动。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">button.addEventListener('longpress', function(e) {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">console.log('Pressed for ' + e.duration + ' milliseconds.');<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">增加实例易如反掌。</P><PRE style="BORDER-BOTTOM: rgb(204,204,204) 1px dashed; BORDER-LEFT: rgb(204,204,204) 1px dashed; PADDING-BOTTOM: 4px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: rgb(248,248,248); MARGIN: 0px auto 10px 0px; PADDING-LEFT: 10px; WIDTH: 579px; PADDING-RIGHT: 4px; FONT-FAMILY: Verdana, 'Microsoft YaHei'; FONT-SIZE: 12px; BORDER-TOP: rgb(204,204,204) 3px solid; BORDER-RIGHT: rgb(204,204,204) 1px dashed; PADDING-TOP: 4px; background-origin: initial; background-clip: initial; border-image: initial" rel="JavaScript"><OL style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"><LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">enableLongPress(anotherButton, 2000);<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">anotherButton.addEventListener('longpress', function(e) {<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">console.log('Pressed for ' + e.duration + ' milliseconds.');<LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">}, false);</LI></OL></PRE>
<P 
style="PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">最后给个<A 
style="COLOR: rgb(0,66,118); TEXT-DECORATION: underline" 
href="http://myst729.github.com/demo/custom-event/custom-event.html" 
target=_blank>演示</A>，大家随便玩。</P></DIV>
<DIV 
style="TEXT-ALIGN: center; PADDING-BOTTOM: 20px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 12px/18px tahoma, arial, 宋体, sans-serif; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" 
class=dede_pages>
<UL 
style="PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px" 
class=pagelist></UL></DIV>
<DIV 
style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; DISPLAY: block; FONT: 12px/18px tahoma, arial, 宋体, sans-serif; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" 
class=clearfix>
<DIV 
style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 30px; WIDTH: 320px; PADDING-RIGHT: 0px; FLOAT: left; PADDING-TOP: 0px" 
class=weekfirst><BR class=Apple-interchange-newline></DIV></DIV>
</BODY>
</HTML>

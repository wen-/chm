<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=gb2312">
<META name="GENERATOR" content="QuickCHM">
<TITLE>ReactNative生命周期</TITLE>
</HEAD>
<BODY>
<P><HEADER class=post-header style="DISPLAY: block"></P>
<H1 class=post-title 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; COLOR: rgb(46,46,46); MARGIN: 0px; LETTER-SPACING: -2px; LINE-HEIGHT: 1.15em; TEXT-INDENT: -3px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision">React 
Native 中组件的生命周期</H1>
<P><SECTION class=post-meta 
style='FONT-FAMILY: "Open Sans", sans-serif; COLOR: rgb(158,171,179); MARGIN: 0px; DISPLAY: block'><TIME 
class=post-date 
style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: uppercase; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px" 
datetime="2015-10-28">28 OCTOBER 2015</TIME><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>on<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><A 
style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(158,171,179); transition: color 0.3s ease" 
href="https://race604.com/tag/react-native/">React-Native</A>,<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><A 
style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(158,171,179); transition: color 0.3s ease" 
href="https://race604.com/tag/android/">Android</A></SECTION></HEADER><SECTION 
class=post-content style="DISPLAY: block"></P>
<H2 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: -1px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">概述</H2>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">就像 
Android 开发中的 View 一样，React Native（RN） 
中的组件也有生命周期（Lifecycle）。所谓生命周期，就是一个对象从开始生成到最后消亡所经历的状态，理解生命周期，是合理开发的关键。RN 
组件的生命周期整理如下图：</P>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial"><IMG 
style="MAX-WIDTH: 126%; BORDER-TOP: 0px; HEIGHT: auto; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0.6em; PADDING-TOP: 0.6em; PADDING-LEFT: 0px; LEFT: 355px; BORDER-LEFT: 0px; DISPLAY: block; PADDING-RIGHT: 0px; transform: translateX(-50%)" 
alt=3-3-component-lifecycle 
src="http://7rf9ir.com1.z0.glb.clouddn.com/3-3-component-lifecycle.jpg"></P>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">如图，可以把组件生命周期大致分为三个阶段：</P>
<UL 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">
  <LI style="MARGIN: 0.4em 0px">第一阶段：是组件第一次绘制阶段，如图中的上面虚线框内，在这里完成了组件的加载和初始化；</LI>
  <LI 
  style="MARGIN: 0.4em 0px">第二阶段：是组件在运行和交互阶段，如图中左下角虚线框，这个阶段组件可以处理用户交互，或者接收事件更新界面；</LI>
  <LI 
style="MARGIN: 0.4em 0px">第三阶段：是组件卸载消亡的阶段，如图中右下角的虚线框中，这里做一些组件的清理工作。</LI></UL>
<H2 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: -1px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">生命周期回调函数</H2>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">下面来详细介绍生命周期中的各回调函数。</P>
<H4 id=getdefaultprops 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">getDefaultProps</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">在组件创建之前，会先调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">getDefaultProps()</CODE>，这是全局调用一次，严格地来说，这不是组件的生命周期的一部分。在组件被创建并加载候，首先调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">getInitialState()</CODE>，来初始化组件的状态。</P>
<H4 id=componentwillmount 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">componentWillMount</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">然后，准备加载组件，会调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentWillMount()</CODE>，其原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">void componentWillMount()  
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">这个函数调用时机是在组件创建，并初始化了状态之后，在第一次绘制<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">render()</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>之前。可以在这里做一些业务初始化操作，也可以设置组件状态。这个函数在整个生命周期中只被调用一次。</P>
<H4 id=componentdidmount 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">componentDidMount</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">在组件第一次绘制之后，会调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentDidMount()</CODE>，通知组件已经加载完成。函数原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">void componentDidMount()  
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">这个函数调用的时候，其虚拟 
DOM 已经构建完成，你可以在这个函数开始获取其中的元素或者子组件了。需要注意的是，RN 框架是先调用子组件的<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentDidMount()</CODE>，然后调用父组件的函数。从这个函数开始，就可以和 
JS 其他框架交互了，例如设置计时<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">setTimeout</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>或者<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">setInterval</CODE>，或者发起网络请求。这个函数也是只被调用一次。这个函数之后，就进入了稳定运行状态，等待事件触发。</P>
<H4 id=componentwillreceiveprops 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">componentWillReceiveProps</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">如果组件收到新的属性（props），就会调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentWillReceiveProps()</CODE>，其原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">void componentWillReceiveProps(  
  object nextProps
)
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">输入参数<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">nextProps</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>是即将被设置的属性，旧的属性还是可以通过<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">this.props</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>来获取。在这个回调函数里面，你可以根据属性的变化，通过调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">this.setState()</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>来更新你的组件状态，这里调用更新状态是安全的，并不会触发额外的<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">render()</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>调用。如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">componentWillReceiveProps: function(nextProps) {  
  this.setState({
    likesIncreasing: nextProps.likeCount &gt; this.props.likeCount
  });
}
</CODE></PRE>
<H4 id=shouldcomponentupdate 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">shouldComponentUpdate</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">当组件接收到新的属性和状态改变的话，都会触发调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">shouldComponentUpdate(...)</CODE>，函数原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">boolean shouldComponentUpdate(  
  object nextProps, object nextState
)
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">输入参数<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">nextProps</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>和上面的<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentWillReceiveProps</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>函数一样，<CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">nextState</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>表示组件即将更新的状态值。这个函数的返回值决定是否需要更新组件，如果<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">true</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>表示需要更新，继续走后面的更新流程。否者，则不更新，直接进入等待状态。</P>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">默认情况下，这个函数永远返回<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">true</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>用来保证数据变化的时候 UI 
能够同步更新。在大型项目中，你可以自己重载这个函数，通过检查变化前后属性和状态，来决定 UI 是否需要更新，能有效提高应用性能。</P>
<H4 id=componentwillupdate 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">componentWillUpdate</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">如果组件状态或者属性改变，并且上面的<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">shouldComponentUpdate(...)</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>返回为<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">true</CODE>，就会开始准更新组件，并调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentWillUpdate()</CODE>，其函数原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">void componentWillUpdate(  
  object nextProps, object nextState
)
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">输入参数与<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">shouldComponentUpdate</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>一样，在这个回调中，可以做一些在更新界面之前要做的事情。需要特别注意的是，在这个函数里面，你就不能使用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">this.setState</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>来修改状态。这个函数调用之后，就会把<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">nextProps</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>和<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">nextState</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>分别设置到<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">this.props</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>和<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">this.state</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>中。紧接着这个函数，就会调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">render()</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>来更新界面了。</P>
<H4 id=componentdidupdate 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">componentDidUpdate</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">调用了<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">render()</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>更新完成界面之后，会调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentDidUpdate()</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>来得到通知，其函数原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">void componentDidUpdate(  
  object prevProps, object prevState
)
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">因为到这里已经完成了属性和状态的更新了，此函数的输入参数变成了<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">prevProps</CODE><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>和<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">prevState</CODE>。</P>
<H4 id=componentwillunmount 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: 0px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">componentWillUnmount</H4>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">当组件要被从界面上移除的时候，就会调用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><CODE 
style="FONT-SIZE: 0.85em; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(227,237,243) 1px solid; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 3px; BORDER-LEFT: rgb(227,237,243) 1px solid; PADDING-RIGHT: 3px; border-radius: 2px">componentWillUnmount()</CODE>，其函数原型如下：</P><PRE style="BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: auto; WORD-WRAP: normal; BORDER-TOP: rgb(227,237,243) 1px solid; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: rgb(227,237,243) 1px solid; WIDTH: 710px; BACKGROUND: rgb(247,250,251); WHITE-SPACE: pre; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(227,237,243) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); PADDING-BOTTOM: 10px; FONT-STYLE: normal; PADDING-TOP: 10px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(227,237,243) 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; border-radius: 3px; hyphens: none"><CODE style="BORDER-TOP: medium none; FONT-FAMILY: Inconsolata, monospace, sans-serif; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; border-radius: 2px">void componentWillUnmount()  
</CODE></PRE>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">在这个函数中，可以做一些组件相关的清理工作，例如取消计时器、网络请求等。</P>
<H2 
style="FONT-FAMILY: &quot;Open Sans&quot;, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(46,46,46); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.4em; LETTER-SPACING: -1px; LINE-HEIGHT: 1.15em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">总结</H2>
<P 
style="FONT-SIZE: 18px; FONT-FAMILY: Merriweather, serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.75em; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1; text-rendering: geometricPrecision; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">到这里，RN 
的组件的完整的生命都介绍完了，在回头来看一下前面的图，就比较清晰了，把生命周期的回调函数总结成如下表格：</P>
<P>
<TABLE 
style="BOX-SIZING: border-box; FONT-SIZE: 18px; MAX-WIDTH: 100%; FONT-FAMILY: Merriweather, serif; WIDTH: 710px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(58,65,69); FONT-STYLE: normal; BORDER-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 1.75em 0px; LETTER-SPACING: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">
  <THEAD>
  <TR>
    <TH 
    style="BORDER-TOP: 0px; VERTICAL-ALIGN: top; COLOR: rgb(0,0,0); PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">生命周期</TH>
    <TH 
    style="BORDER-TOP: 0px; VERTICAL-ALIGN: top; COLOR: rgb(0,0,0); PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">调用次数</TH>
    <TH 
    style="BORDER-TOP: 0px; VERTICAL-ALIGN: top; COLOR: rgb(0,0,0); PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">能否使用 
      setSate()</TH></TR></THEAD>
  
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">getDefaultProps</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">1(全局调用一次)</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">否</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">getInitialState</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">1</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">否</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">componentWillMount</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">1</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">是</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">render</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">&gt;=1</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">否</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">componentDidMount</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">1</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">是</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">componentWillReceiveProps</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">&gt;=0</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">是</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">shouldComponentUpdate</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">&gt;=0</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">否</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">componentWillUpdate</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">&gt;=0</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">否</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">componentDidUpdate</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">&gt;=0</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(246,246,246)">否</TD></TR>
  <TR>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">componentWillUnmount</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">1</TD>
    <TD 
    style="BORDER-TOP: rgb(239,239,239) 1px solid; VERTICAL-ALIGN: top; PADDING-BOTTOM: 8px; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 8px; LINE-HEIGHT: 20px; PADDING-RIGHT: 8px">否</TD></TR></TABLE><BR 
class=Apple-interchange-newline></P>
</BODY>
</HTML>

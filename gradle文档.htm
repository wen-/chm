<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=gb2312">
<META name="GENERATOR" content="QuickCHM">
<TITLE>gradle文档</TITLE>
</HEAD>
<BODY>
<H1 class=postTitle 
style="FONT-SIZE: 14px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; WIDTH: 1516px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: left; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 5px; CLEAR: both; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(254,254,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial"><A 
id=cb_post_title_url class=postTitle2 
style="TEXT-DECORATION: none; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="http://www.cnblogs.com/zhaoyanjun/p/7603640.html">Android 
Gradle使用总结</A></H1>
<DIV class=clear 
style="FONT-SIZE: 12px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(254,254,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial"></DIV>
<DIV class=postBody 
style="FONT-SIZE: 13px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 5px; PADDING-LEFT: 5px; ORPHANS: 2; WIDOWS: 2; MARGIN: 5px 0px 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.5; PADDING-RIGHT: 2px; BACKGROUND-COLOR: rgb(254,254,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial">
<DIV id=cnblogs_post_body class="blogpost-body cnblogs-markdown" 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 20px; PADDING-RIGHT: 0px">
<BLOCKQUOTE 
style="BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(239,239,239) 2px solid; COLOR: rgb(51,51,51); PADDING-BOTTOM: 5px; PADDING-TOP: 5px; PADDING-LEFT: 10px; BORDER-LEFT: rgb(239,239,239) 2px solid; MARGIN: 10px 0px; LINE-HEIGHT: 1.6em; PADDING-RIGHT: 10px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">转载请标明出处：<A 
  class=uri 
  style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
  href="http://blog.csdn.net/zhaoyanjun6/article/details/77678577">http://blog.csdn.net/zhaoyanjun6/article/details/77678577</A><BR 
  style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">本文出自<A 
  style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
  href="http://blog.csdn.net/zhaoyanjun6/">【赵彦军的博客】</A></P></BLOCKQUOTE>
<H2 id=其他 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><STRONG 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">其他</STRONG></H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><A 
style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="http://blog.csdn.net/zhaoyanjun6/article/details/70313790">Groovy 使用完全解析 
http://blog.csdn.net/zhaoyanjun6/article/details/70313790</A></P>
<H2 id=android-gradle 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Android 
Gradle</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">Android项目使用 
Gradle 作为构建框架，Gradle 又是以Groovy为脚本语言。所以学习Gradle之前需要先熟悉Groovy脚本语言。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">Groovy是基于Java语言的脚本语言，所以它的语法和Java非常相似，但是具有比java更好的灵活性。下面就列举一些和Java的主要区别。</P>
<H2 id=android-gradle-的-project-和-tasks 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Android 
Gradle 的 Project 和 Tasks</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这个Gradle中最重要的两个概念。每次构建（build）至少由一个project构成，一个project 
由一到多个task构成。项目结构中的每个build.gradle文件代表一个project，在这编译脚本文件中可以定义一系列的task；task 
本质上又是由一组被顺序执行的Action`对象构成，Action其实是一段代码块，类似于Java中的方法。</P>
<H2 id=android-gradle-构建生命周期 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Android 
Gradle 构建生命周期</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">每次构建的执行本质上执行一系列的Task。某些Task可能依赖其他Task。哪些没有依赖的Task总会被最先执行，而且每个Task只会被执行一遍。每次构建的依赖关系是在构建的配置阶段确定的。每次构建分为3个阶段：</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">Initialization: 
  初始化阶段</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这是创建Project阶段，构建工具根据每个build.gradle文件创建出一个Project实例。初始化阶段会执行项目根目录下的settings.gradle文件，来分析哪些项目参与构建。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">所以这个文件里面的内容经常是：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs ruby" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">include</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">':app'</SPAN>
<SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">include</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">':libraries:someProject'</SPAN></CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这是告诉Gradle这些项目需要编译，所以我们引入一些开源的项目的时候，需要在这里填上对应的项目名称，来告诉Gradle这些项目需要参与构建。</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">Configuration:配置阶段</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这个阶段，通过执行构建脚本来为每个project创建并配置Task。配置阶段会去加载所有参与构建的项目的build.gradle文件，会将每个build.gradle文件实例化为一个Gradle的project对象。然后分析project之间的依赖关系，下载依赖文件，分析project下的task之间的依赖关系。</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">Execution:执行阶段</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这是Task真正被执行的阶段，Gradle会根据依赖关系决定哪些Task需要被执行，以及执行的先后顺序。<BR 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">task是Gradle中的最小执行单元，我们所有的构建，编译，打包，debug，test等都是执行了某一个task，一个project可以有多个task，task之间可以互相依赖。例如我有两个task，taskA和taskB，指定taskA依赖taskB，然后执行taskA，这时会先去执行taskB，taskB执行完毕后在执行taskA。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">说到这可能会有疑问，我翻遍了build.gradle也没看见一个task长啥样，有一种被欺骗的赶脚！</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">其实不是，你点击AndroidStudio右侧的一个Gradle按钮，会打开一个面板，内容差不多是这样的：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170823203047843?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">里面的每一个条目都是一个task，那这些task是哪来的呢？</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">一个是根目录下的<SPAN>&nbsp;</SPAN><CODE 
style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(204,204,204) 1px solid; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: 1px 5px; DISPLAY: inline-block; LINE-HEIGHT: 1.8; PADDING-RIGHT: 5px !important; BACKGROUND-COLOR: rgb(245,245,245); border-radius: 3px'>build.gradle</CODE><SPAN>&nbsp;</SPAN>中的</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">dependencies</SPAN> {
        <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">classpath</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.android.tools.build:gradle:2.2.2'</SPAN>
    }</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">一个是 
app 目录下的<SPAN>&nbsp;</SPAN><CODE 
style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(204,204,204) 1px solid; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: 1px 5px; DISPLAY: inline-block; LINE-HEIGHT: 1.8; PADDING-RIGHT: 5px !important; BACKGROUND-COLOR: rgb(245,245,245); border-radius: 3px'>build.gradle</CODE><SPAN>&nbsp;</SPAN>中的</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs groovy" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>apply <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">plugin:</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.android.application'</SPAN></CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这两段代码决定的。也就是说，Gradle提供了一个框架，这个框架有一些运行的机制可以让你完成编译，但是至于怎么编译是由插件决定的。还好Google已经给我们写好了Android对应的Gradle工具，我们使用就可以了。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">根目录下的build.gradle中dependencies 
{classpath 'com.android.tools.build:gradle:2.2.2'}是Android Gradle编译插件的版本。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">app目录下的build.gradle中的apply 
plugin: 
'com.android.application'是引入了Android的应用构建项目，还有com.android.library和com.android.test用来构建library和测试。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">所有Android构建需要执行的task都封装在工具里，如果你有一些特殊需求的话，也可以自己写一些task。那么对于开发一个Android应用来说，最关键的部分就是如何来用AndroidGradle的插件了。</P>
<H2 id=认知gradle-wrapper 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">认知Gradle 
Wrapper</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">Android 
Studio中默认会使用 Gradle Wrapper 
而不是直接使用Gradle。命令也是使用gradlew而不是gradle。这是因为gradle针对特定的开发环境的构建脚本，新的gradle可能不能兼容旧版的构建环境。为了解决这个问题，使用Gradle 
Wrapper 来间接使用 gradle。相当于在外边包裹了一个中间层。对开发者来说，直接使用Gradlew 即可，不需要关心 
gradle的版本变化。Gradle Wrapper 会负责下载合适的的gradle版本来构建项目。</P>
<H2 id=android-三个文件重要的-gradle-文件 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Android 
三个文件重要的 gradle 文件</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">Gradle项目有3个重要的文件需要深入理解：项目根目录的 
build.gradle , settings.gradle 和模块目录的 build.gradle 。</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">1.settings.gradle 
  文件会在构建的 initialization 阶段被执行，它用于告诉构建系统哪些模块需要包含到构建过程中。对于单模块项目， settings.gradle 
  文件不是必需的。对于多模块项目，如果没有该文件，构建系统就不能知道该用到哪些模块。</P></LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">2.项目根目录的 
  build.gradle 
  文件用来配置针对所有模块的一些属性。它默认包含2个代码块：buildscript{...}和allprojects{...}。前者用于配置构建脚本所用到的代码库和依赖关系，后者用于定义所有模块需要用到的一些公共属性。</P></LI></UL><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs typescript" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.android.tools.build:gradle:2.3.2'</SPAN>
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(<SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">type</SPAN>: Delete) {
    <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">delete</SPAN> rootProject.buildDir
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">buildscript：定义了 
Android 编译工具的类路径。repositories中, jCenter是一个著名的 Maven 仓库。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">allprojects:中定义的属性会被应用到所有 
moudle 中，但是为了保证每个项目的独立性，我们一般不会在这里面操作太多共有的东西。</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">3.模块级配置文件 
  build.gradle 针对每个moudle 的配置，如果这里的定义的选项和顶层 
  build.gradle定义的相同。它有3个重要的代码块：plugin，android 和 dependencies。</LI></UL>
<H2 id=定制项目属性project-properties 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">定制项目属性（project 
properties)</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在项目根目录的build.gradle配置文件中，我们可以定制适用于所有模块的属性，通过ext 
代码块来实现。如下所示：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">ext</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compileSdkVersion</SPAN> = <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">22</SPAN>
    buildToolsVersion = <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"22.0.1"</SPAN>
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">然后我们可以在模块目录的build.gradle配置文件中引用这些属性,引用语法为rootProject.ext.{属性名}。如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compileSdkVersion</SPAN> rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
}</CODE></PRE>
<H2 id=android-studio-gradle-task 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Android 
studio gradle Task</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170823201922983?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs groovy" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//构建</SPAN>
gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>clean    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//移除所有的编译输出文件，比如apk</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>build   <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//构建 app module ，构建任务，相当于同时执行了check任务和assemble任务</SPAN>

<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//检测</SPAN>
gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>check   <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//执行lint检测编译。</SPAN>

<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//打包</SPAN>
gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>assemble <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//可以编译出release包和debug包，可以使用gradlew assembleRelease或者gradlew assembleDebug来单独编译一种包</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>assembleRelease  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//app module 打 release 包</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>assembleDebug  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//app module 打 debug 包</SPAN>

<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//安装，卸载</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>installDebug  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//安装 app 的 debug 包到手机上</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>uninstallDebug  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//卸载手机上 app 的 debug 包</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>uninstallRelease  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//卸载手机上 app 的 release 包</SPAN>

gradlew <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">app:</SPAN>uninstallAll  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//卸载手机上所有 app 的包</SPAN>
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这些都是基本的命令，在实际项目中会根据不同的配置，会对这些task 
设置不同的依赖。比如 默认的 assmeble 会依赖 assembleDebug 
和assembleRelease，如果直接执行assmeble，最后会编译debug，和release 的所有版本出来。如果我们只需要编译debug 
版本，我们可以运行assembleDebug。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">除此之外还有一些常用的新增的其他命令，比如 
install命令，会将编译后的apk 安装到连接的设备。</P>
<H2 id=lint-检测 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">lint 
检测</H2>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">忽略编译器的 
  lint 检查</LI></UL><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {

  <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">lintOptions</SPAN> {
      <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">abortOnError</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
  }
  
}</CODE></PRE>
<H2 id=buildtypes-定义了编译类型 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">buildTypes 
定义了编译类型</H2><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs javascript" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android{

  buildTypes {
        release {
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">true</SPAN>  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//打开混淆</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
        }
        debug {
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN> <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//关闭混淆</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
        }
    }
 }</CODE></PRE>
<H2 id=productflavors-多渠道打包 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">productFlavors 
多渠道打包</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">AndroidManifest.xml 
里设置动态渠道变量</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs haskell" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>&lt;meta-<SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">data</SPAN></SPAN>
    android:name=<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"UMENG_CHANNEL"</SPAN>
    android:value=<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"${UMENG_CHANNEL_VALUE}"</SPAN> /&gt;</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在 
build.gradle 设置 productFlavors , 这里假定我们需要打包的渠道为酷安市场、360、小米、百度、豌豆荚。</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {  

    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">productFlavors</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">kuan</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">manifestPlaceholders</SPAN> = [UMENG_CHANNEL_VALUE: <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"kuan"</SPAN>]
        }
        xiaomi {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">manifestPlaceholders</SPAN> = [UMENG_CHANNEL_VALUE: <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"xiaomi"</SPAN>]
        }
        qh360 {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">manifestPlaceholders</SPAN> = [UMENG_CHANNEL_VALUE: <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"qh360"</SPAN>]
        }
        baidu {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">manifestPlaceholders</SPAN> = [UMENG_CHANNEL_VALUE: <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"baidu"</SPAN>]
        }
        wandoujia {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">manifestPlaceholders</SPAN> = [UMENG_CHANNEL_VALUE: <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"wandoujia"</SPAN>]
        }
    } 
     
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">或者批量修改</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs dts" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android </SPAN>{  

    <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">productFlavors </SPAN>{
        <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">kuan </SPAN>{}
        <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">xiaomi </SPAN>{}
        <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">qh360 </SPAN>{}
        <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">baidu </SPAN>{}
        <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">wandoujia </SPAN>{}
    }  

    productFlavors.<SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">all </SPAN>{ 
        flavor -&gt; flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name] 
    }
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这样在打包的时候就可以选择渠道了</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170829171210496?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">或者用命令打包 
，比如：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs cpp" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>gradlew assembleWandoujiaRelease  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//豌豆荚 release 包</SPAN>

gradlew assembleWandoujiaDebug <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//豌豆荚 debug 包</SPAN>
</CODE></PRE>
<H2 id=signing-签名 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Signing 
签名</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在 
android 标签下添加 signingConfigs 标签，如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">signingConfigs</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">config</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">keyAlias</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'yiba'</SPAN>
            keyPassword <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'123456'</SPAN>
            storeFile file(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'C:/work/Key.jks'</SPAN>)
            storePassword <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'1234567'</SPAN>
        }
    }
 }   </CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">可以在 
release 和 debug 包中定义签名，如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">signingConfigs</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">config</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">keyAlias</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'yiba'</SPAN>
            keyPassword <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'123456'</SPAN>
            storeFile file(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'C:/work/Key.jks'</SPAN>)
            storePassword <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'1234567'</SPAN>
        }
    }
 
    buildTypes {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">release</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
            signingConfig signingConfigs.config
        }
        <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
            signingConfig signingConfigs.config
        }
    }
}</CODE></PRE>
<H2 id=依赖管理 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">依赖管理</H2>
<H3 id=依赖-jcenter-包 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">1、依赖 
jcenter 包</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">每个库名称包含三个元素：组名:库名称:版本号</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'> <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compile</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.android.support:appcompat-v7:25.0.0'</SPAN></CODE></PRE>
<H3 id=依赖本地-module 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">2、依赖本地 
module</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs lisp" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'> compile project('<SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:YibaAnalytics</SPAN>')
 </CODE></PRE>
<H3 id=依赖-jar-包 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">3、依赖 
jar 包</H3>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">1、把 
  jar 包放在 libs 目录下</LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">2、在 
  build.gradle 中添加依赖</LI></UL><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">dependencies</SPAN> {
   <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compile</SPAN> files(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'libs/YibaAnalytics5.jar'</SPAN>)
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170825144650249?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<H3 id=依赖-aar-包 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">4、依赖 
aar 包</H3>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">1、把 
  aar 包放到 libs 目录下</LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">2、在 
  build.gradle 中添加依赖</LI></UL><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs groovy" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
repositories {
    flatDir {
        dirs <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'libs'</SPAN>
    }
}

dependencies {
    compile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">name:</SPAN><SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'YibaAnalytics-release'</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">ext:</SPAN><SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'aar'</SPAN>)
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">如图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170825145521766?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<H3 id=自定义依赖包目录 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">5、自定义依赖包目录</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">当我们的 
aar 包需要被多个 module 依赖时，我们就不能把 aar 包放在单一的 module 中，我们可以在项目的根目录创建一个目录，比如叫 aar 
目录，然后把我们的 aar 包放进去，如图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170825151455035?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在项目的根目录的 
build.gradle 的 allprojects 标签下的 repositories 添加 ：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
 <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">flatDir</SPAN> {
     <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">dirs</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'../aar'</SPAN>
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><CODE 
style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(204,204,204) 1px solid; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: 1px 5px; DISPLAY: inline-block; LINE-HEIGHT: 1.8; PADDING-RIGHT: 5px !important; BACKGROUND-COLOR: rgb(245,245,245); border-radius: 3px'>../aar</CODE><SPAN>&nbsp;</SPAN>表示根目录下的 
aar 文件夹。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">如图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170825151950508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">然后就可以添加依赖了，如下所示：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs groovy" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
 compile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">name:</SPAN><SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'YibaAnalytics-release'</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">ext:</SPAN><SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'aar'</SPAN>)
</CODE></PRE>
<H3 id=依赖配置 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">6、依赖配置</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">有些时候，你可能需要和sdk协调工作。为了能顺利编译你的代码，你需要添加SDK到你的编译环境。你不需要将sdk包含在你的APK中，因为它早已经存在于设备中，所以配置来啦，我们会有5个不同的配置：</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">compile</LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">apk</LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">provided</LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">testCompile</LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">androidTestCompile</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">compile是默认的那个，其含义是包含所有的依赖包，即在APK里，compile的依赖会存在。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">apk的意思是apk中存在，但是不会加入编译中，这个貌似用的比较少。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">provided的意思是提供编译支持，但是不会写入apk。</P>
<H2 id=native包so包 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">native包（so包）</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">用c或者c++写的library会被叫做so包，Android插件默认情况下支持native包，你需要把.so文件放在对应的文件夹中：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170825154036336?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><STRONG 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">注意</STRONG></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">jniLibs 
目录应该和 Java 目录在同一级</P>
<H2 id=defaultconfig-详解 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">defaultConfig 
详解</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">defaultConfig 
对应的是 ProductFlavor 类。</P>
<H3 id=resconfigs-过滤语言 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">resConfigs 
： 过滤语言</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">如果你的app中仅支持1,2种语言，但是可能引用的lib库包含多种其他语言的strings资源，这个时候我们可以通过resConfig指定我们需要的strings资源。</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {

    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">defaultConfig</SPAN> {
        <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">applicationId</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"com.yiba.sharewe.lite.activity"</SPAN>
        minSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">14</SPAN>
        targetSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">24</SPAN>
        versionCode <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">46</SPAN>
        versionName <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"1.74"</SPAN>
        resConfigs <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'en'</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'zh-rCN'</SPAN> ,<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'es'</SPAN>  //本次打包，只把 en(英文)、zh-rCN(中文简体)、es（西班牙语）打进保内，其他语言忽略
    }
}
</CODE></PRE>
<H3 id=resconfigs-过滤-drawable文件夹的资源 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">resConfigs 
： 过滤 drawable文件夹的资源</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">一般情况下，我们打完包，res 
下面的资源如图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170830194435936?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">现在加上资源过滤规则：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs dts" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android </SPAN>{
  
    <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">defaultConfig </SPAN>{
        applicationId <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"com.wifi.analytics"</SPAN>
        minSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">9</SPAN>
        targetSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">25</SPAN>
        versionCode <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">1</SPAN>
        versionName <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"1.0"</SPAN>
        resConfigs <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"hdpi"</SPAN>  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//打包的时候只保留 drawable-xhdpi 文件夹里面的资源</SPAN>
    }

}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这次我们打包效果如下：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170830194609826?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<H2 id=buildtypes-详解 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">buildTypes 
详解</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><A 
style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html">官方文档</A></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">buildTypes{}对应的是 
BuildType 类</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><STRONG 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">继承关系</STRONG></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">BuildType 
继承 DefaultBuildType ； DefaultBuildType 继承 BaseConfigImpl ；</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs lua" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>BaseConfigImpl
    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">--- DefaultBuildType </SPAN>
          <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">--- BuildType</SPAN></CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><STRONG 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">buildTypes的属性：</STRONG></P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs lua" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>name：build <SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">type</SPAN>的名字

applicationIdSuffix：应用id后缀

versionNameSuffix：版本名称后缀

debuggable：是否生成一个<SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN>的apk

minifyEnabled：是否混淆

proguardFiles：混淆文件

signingConfig：签名配置

manifestPlaceholders：清单占位符

shrinkResources：是否去除未利用的资源，默认<SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>，表示不去除。

zipAlignEnable：是否使用zipalign工具压缩。

multiDexEnabled：是否拆成多个Dex

multiDexKeepFile：指定文本文件编译进主Dex文件中

multiDexKeepProguard：指定混淆文件编译进主Dex文件中
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">buildType的方法：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>1<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.buildConfigField</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">type</SPAN>,<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">name</SPAN>,<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">value</SPAN>)：添加一个变量生成<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">BuildConfig</SPAN>类。

2<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.consumeProguardFile</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">proguardFile</SPAN>)：添加一个混淆文件进<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">arr</SPAN>包。

3<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.consumeProguardFile</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">proguardFiles</SPAN>)：添加混淆文件进<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">arr</SPAN>包。

4<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.externalNativeBuild</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">action</SPAN>)：配置本地的<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">build</SPAN>选项。

5<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.initWith</SPAN>：复制这个<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">build</SPAN>类型的所有属性。

6<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.proguardFile</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">proguardFile</SPAN>)：添加一个新的混淆配置文件。

7<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.proguradFiles</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">files</SPAN>):添加新的混淆文件

8<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.resValue</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">type</SPAN>,<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">name</SPAN>,<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">value</SPAN>)：添加一个新的生成资源

9<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.setProguardFiles</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">proguardFileIterable</SPAN>):设置一个混淆配置文件。
</CODE></PRE>
<H3 id=initwith-复制属性 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">initWith 
：复制属性</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compileSdkVersion</SPAN> <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">25</SPAN>
    buildToolsVersion <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"25.0.2"</SPAN>
    defaultConfig {
        <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">applicationId</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"com.wifi.analytics"</SPAN>
        minSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">9</SPAN>
        targetSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">25</SPAN>
        versionCode <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">1</SPAN>
        versionName <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"1.0"</SPAN>
    }
    buildTypes {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">release</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
        }
        <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
        }

        myType {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">initWith</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN>  //完全复制 <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN> 的所有属性‘
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">true</SPAN> //自定义打开混淆
        }
    }
}</CODE></PRE>
<H3 id=applicationidsuffix-versionnamesuffix-添加后缀 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">applicationIdSuffix 
、versionNameSuffix ：添加后缀</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compileSdkVersion</SPAN> <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">25</SPAN>
    buildToolsVersion <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"25.0.2"</SPAN>
    defaultConfig {
        <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">applicationId</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"com.wifi.analytics"</SPAN>
        minSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">9</SPAN>
        targetSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">25</SPAN>
        versionCode <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">1</SPAN>
        versionName <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"1.0"</SPAN>
    }
    buildTypes {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">release</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
        }
        <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
            applicationIdSuffix <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"zhao"</SPAN>  //applicationId 追加后缀名 zhao
            versionNameSuffix <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"debug"</SPAN>  //versionName 追加后缀名 <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN>1.<SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">0</SPAN>
        }
    }
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果图，如下：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170830113320519?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<H3 id=buildconfigfield-自定义属性 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">buildConfigField： 
自定义属性</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在 
build.gradle 文件中定义 buildConfigField 属性</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
  
    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">buildTypes</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">release</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
            buildConfigField <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"String"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"API_ENV"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"\"http://yiba.com\""</SPAN>  //自定义String属性
        }
        <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
            buildConfigField <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"String"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"API_ENV"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"\"http://yiba.com\""</SPAN>  //自定义String属性
        }
    }
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">然后点击同步按钮，然后就可以在 
build 目录看到 debug 和 release 信息。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">debug 
环境下的 BuildConfig 如下：<BR 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170830143049245?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">release 
环境下的 BuildConfig 如下：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170830143103493?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">当然我们也可以在代码中获取自定义的值：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs delphi" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//获取变量值</SPAN>
<SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">String</SPAN> API = BuildConfig.API_ENV ;
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">上面演示了自定义 
String 变量，也可以 自定义 int 、boolean</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
  
    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">buildTypes</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debug</SPAN> {
            <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">minifyEnabled</SPAN> <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-android.txt'</SPAN>), <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard-rules.pro'</SPAN>
            buildConfigField <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"String"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"API_ENV"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"\"http://www.baidu.com\""</SPAN> //自定义 String 值
            buildConfigField <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"Boolean"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"openLog"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"true"</SPAN> //自定义 boolean 值
            buildConfigField <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"int"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"age"</SPAN>, <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"10"</SPAN>   //自定义 int 值
        }
    }
}</CODE></PRE>
<H2 id=gradle-实现差异化构建 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Gradle 
实现差异化构建</H2>
<H3 id=情景1 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">情景1</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">LeakCanary 
是 square 公司出品的一个检测内存泄漏的开源库。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">GitHub 
：<SPAN>&nbsp;</SPAN><A class=uri 
style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="https://github.com/square/leakcanary">https://github.com/square/leakcanary</A></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">我们一般这样集成</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">dependencies</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compile</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.squareup.leakcanary:leakcanary-android:1.5.2'</SPAN>
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">然后我们在 
Application 类中初始化：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs scala" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>public <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">class</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">MyApplication</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">extends</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Application</SPAN> </SPAN>{
    
    <SPAN class=hljs-meta style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">@Override</SPAN>
    public void onCreate() {
        <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">super</SPAN>.onCreate();
      
        <SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">LeakCanary</SPAN>.install(<SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">this</SPAN>);
    }
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">但是这样集成有一个弊端，就是 
debug 和 release 包都会把 LeakCanary 的源码打进去，如果我们在 release 包中不把 LeakCanary 源码打进去，怎么办？ 
还好 LeakCanary 给我们提供了一个方法，方法如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs javascript" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>dependencies {

 <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//打 debug 包</SPAN>
 debugCompile <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.squareup.leakcanary:leakcanary-android:1.5.1'</SPAN>

 <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//打 release 包</SPAN>
 releaseCompile <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'</SPAN>

}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">leakcanary-android-no-op 
是一个空壳，里面有2个空类，所以就可以避免把 LeakCanary 源码打进 release 包。但是这种方式有个缺陷，如果一些开源库没有提供 
releaseCompile 库，那我们改怎么办了？下面的情景2 就会讲到解决方案。</P>
<H3 id=情景2 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">情景2</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">Stetho 
是 Faceboo k开源的Andorid调试工具。当你的应用集成Stetho时，开发者可以访问Chrome，在Chrome Developer 
Tools中查看应用布局，网络请求，sqlite，preference 等等。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">官网：<A 
class=uri 
style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="http://facebook.github.io/stetho/">http://facebook.github.io/stetho/</A></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">从官网可以看到 
stetho 没有提供 releaseCompile 包 ， 情景1 的方案就不能用了。新的思路集成方案如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">dependencies</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">debugCompile</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com.facebook.stetho:stetho:1.5.0'</SPAN>
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在 
src 目录下创建 debug 目录、release 目录 ，然后分别在 debug 目录 和 release 目录 创建 java 目录 ， 在 java 
目录中创建包名，比如：<SPAN>&nbsp;</SPAN><CODE 
style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(204,204,204) 1px solid; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: 1px 5px; DISPLAY: inline-block; LINE-HEIGHT: 1.8; PADDING-RIGHT: 5px !important; BACKGROUND-COLOR: rgb(245,245,245); border-radius: 3px'>com.app</CODE><SPAN>&nbsp;</SPAN>, 
如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170831183625607?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">debug 
目录下创建 SDKManage 类 ，如下 ：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs cs" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">public</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">class</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SDKManager</SPAN> {

    <SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">public</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">static</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">init</SPAN>(<SPAN class=hljs-params style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Context context</SPAN>) </SPAN>{
        <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//初始化 Stetho</SPAN>
        Stetho.initializeWithDefaults(context);
    }
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">release 
目录下创建 SDKManage 类 ，如下 ：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs cs" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">public</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">class</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SDKManager</SPAN> {

    <SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">public</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">static</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">init</SPAN>(<SPAN class=hljs-params style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Context context</SPAN>) </SPAN>{ 
        <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//这是一个空方法，目的是不引入 Stetho 源码</SPAN>
    }

}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在住项目中的 
MyApplication 类，并且完成 Stetho 的初始化，如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs scala" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>public <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">class</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">MyApplication</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">extends</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Application</SPAN> </SPAN>{

    <SPAN class=hljs-meta style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">@Override</SPAN>
    public void onCreate() {
        <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">super</SPAN>.onCreate();
        <SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SDKManager</SPAN>.init(<SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">this</SPAN>);
    }
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这样我们便完成了简单的差异化构建, 
打出来的 release 包就没有 Stetho 源码。</P>
<H2 id=sourceset 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet</H2>
<H3 id=sourceset-简介 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
简介</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">SourceSet 
可以定义项目结构，也可以修改项目结构。Java插件默认实现了两个SourceSet，main 和 test。每个 SourceSet 
都提供了一系列的属性，通过这些属性，可以定义该 SourceSet 所包含的源文件。比如，java.srcDirs，resources.srcDirs 
。Java 插件中定义的其他任务，就根据 main 和 test 的这两个 SourceSet 的定义来寻找产品代码和测试代码等。</P>
<H3 id=sourceset-定义源码目录 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
定义源码目录</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在 
Android 项目中，我们可以在<SPAN>&nbsp;</SPAN><CODE 
style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(204,204,204) 1px solid; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: 1px 5px; DISPLAY: inline-block; LINE-HEIGHT: 1.8; PADDING-RIGHT: 5px !important; BACKGROUND-COLOR: rgb(245,245,245); border-radius: 3px'>src/main/java</CODE><SPAN>&nbsp;</SPAN>目录新建 
Java 文件，如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905140715958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">现在我们在 
src 目录下，新建 test1 目录 ，发现不能在 test1 目录中新建 Java 文件，如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905141214776?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">为什么在 
test1 目录不能新建 Java 文件，因为 Gradle 中 SourceSet 默认定义的源码文件路径是<CODE 
style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(204,204,204) 1px solid; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: 1px 5px; DISPLAY: inline-block; LINE-HEIGHT: 1.8; PADDING-RIGHT: 5px !important; BACKGROUND-COLOR: rgb(245,245,245); border-radius: 3px'>src/main/java</CODE><SPAN>&nbsp;</SPAN>, 
其他的文件下下面的源码我们自然无法访问。解决这个问题也很简单，我们需要在 SourceSet 中增加一个源码路径即可。如下所示：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
  
    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">sourceSets</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">main</SPAN> {
            <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">java</SPAN> {
                <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">srcDir</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test1'</SPAN> //指定源码目录
            }
        }
    }
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">然后同步一下，就可以在 
test1 目录中新建 Java 文件了。如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905141937766?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">当然我们也可以同时指定多个源码目录，比如同时指定 
test1 , test2 , test3 为源码目录。</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android</SPAN> {
 
    <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">sourceSets</SPAN> {
        <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">main</SPAN> {
            <SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">java</SPAN> {
                <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">srcDir</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test1'</SPAN> //指定 test1 为源码目录
                srcDir <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test2'</SPAN> //指定 test2 为源码目录
                srcDir <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test3'</SPAN> //指定 test3 为源码目录
            }
        }
    }
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">或者 
这样写 ：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs bash" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android {
    <SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">source</SPAN>Sets {
        main {
            java.srcDirs( <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test1'</SPAN> , <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test2'</SPAN> ,<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test3'</SPAN> )
        }
    }
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905143721163?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<H3 id=sourceset-定义资源目录 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
定义资源目录</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">定义 
test1 目录 Java 源代码路径、res 资源目录。目录结构如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905170035975?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs javascript" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android {

    sourceSets {
        main {
            java.srcDirs(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test1/java'</SPAN>)  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义java 源代码</SPAN>
            res.srcDirs(<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test1/res'</SPAN>)    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义资源目录（layout , drawable,values）</SPAN>
        }
    }
}
</CODE></PRE>
<H3 id=sourceset-实现-layout-分包 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
实现 layout 分包</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">对于一个大项目来说，页面太多，布局文件就很多，有时在众多布局文件中找某个模块的布局文件，很是痛苦，为了解决这个问题，我们可以在创建多个 
layout 目录，不同模块的布局文件放在不同的 layout 目录中，这样查找起来，就容易很多。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">例子：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">比如我们的项目中，有两个模块分别为：登录、注册。</P>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">第一步：把项目中 
  layout 文件夹改名字为 layouts</P></LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">第二步：在 
  layouts 目录下，分别创建 login 、register 目录 。</P></LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">第三步：分别在 
  login 、register 目录下创建 layout 目录。注意这一步是必须的，否则会报错。</P></LI>
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">
  <P 
  style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">第四步：把 
  登录布局文件、注册布局文件 分别放在 第三步创建的对应的 layout 目录下。</P></LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果图如下：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905172308852?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">SourceSet 
实现如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs javascript" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android {
   
    sourceSets {
        main {
            res.srcDirs <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/main/res/layouts/login'</SPAN>  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义登录布局目录</SPAN>
            res.srcDirs <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/main/res/layouts/register'</SPAN>  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义注册布局目录</SPAN>
        }
    }
}</CODE></PRE>
<H3 id=sourceset-定义-androidmanifest-文件 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
定义 AndroidManifest 文件</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">指定 
test1 目录下的 AndroidManifest 文件。项目结构如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905180054349?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">代码如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs bash" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android {

    <SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">source</SPAN>Sets {
        main {
            manifest.srcFile <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src/test1/AndroidManifest.xml'</SPAN>
        }
    }
}</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在组件化开发中, 
我们需要针对 debug 与 release 模式下, 指定不同的 Manifest 文件, 代码如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs scala" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android {
    <SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">def</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">appDebug</SPAN> </SPAN>= <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>;
    
    buildTypes {
        release {
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-android.txt'), <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-rules.pro'
            appDebug = <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>;
        }

        debug {
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-android.txt'), <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-rules.pro'
            appDebug = <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>;
        }
    }

    sourceSets {
        main {
            <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">if</SPAN> (appDebug) {
                manifest.srcFile <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src</SPAN>/test1/<SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">AndroidManifest</SPAN>.xml'
            } <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">else</SPAN> {
                manifest.srcFile <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'src</SPAN>/main/<SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">AndroidManifest</SPAN>.xml'
            }
        }
    }
}
</CODE></PRE>
<H3 id=sourceset-定义-assets-目录 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
定义 assets 目录</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">Android 
Studio 项目目录中，assets 默认目录如下：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905200537356?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">如何重新定义 
assets 目录 。在项目的根目录下创建 assets 目录，如下图所示：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170905201024969?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">sourceSets 
定义代码如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs bash" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>android {

    <SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">source</SPAN>Sets {
        main {
            assets.srcDirs = [<SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'assets'</SPAN>]
        }
    }
}
</CODE></PRE>
<H3 id=sourceset-定义其他资源 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">SourceSet 
定义其他资源</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs dts" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">android </SPAN>{

    <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">sourceSets </SPAN>{
        <SPAN class=hljs-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">main </SPAN>{
            jniLibs.srcDirs  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义 jni 目录</SPAN>
            aidl.srcDirs  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义 aidl 目录</SPAN>
        }
    }
}
     </CODE></PRE>
<H2 id=applicationvariants 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">applicationVariants</H2>
<H3 id=定义-versionname-versioncode 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">定义 
versionName 、VersionCode</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">在打包的时候分 
debug 、release 版本 , 需要控制 versionName</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs scala" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
android {

     applicationVariants.all { variant -&gt;
        <SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">def</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">flavor</SPAN> </SPAN>= variant.mergedFlavor
        <SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">def</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">versionName</SPAN> </SPAN>= flavor.versionName
        <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">if</SPAN> (variant.buildType.isDebuggable()) {
            versionName += <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"_debug"</SPAN>  <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//debug 名字</SPAN>
        } <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">else</SPAN> {
            versionName += <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"_release"</SPAN> <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//release 名字</SPAN>
        }
        flavor.versionName = versionName
    }

}
</CODE></PRE>
<H3 id=定义-apk-包的名字 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">定义 
APK 包的名字</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs scala" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
apply plugin: <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'com</SPAN>.android.application'

android {

    defaultConfig {
        applicationId <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"android.plugin"</SPAN>
        minSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">14</SPAN>
        targetSdkVersion <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">25</SPAN>
        versionCode <SPAN class=hljs-number style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">1</SPAN>
        versionName <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"1.0"</SPAN>
    }

    buildTypes {
        release {
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-android.txt'), <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-rules.pro'
        }
        debug {
            minifyEnabled <SPAN class=hljs-literal style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">false</SPAN>
            proguardFiles getDefaultProguardFile(<SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-android.txt'), <SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'proguard</SPAN>-rules.pro'
        }
    }

    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义渠道</SPAN>
    productFlavors {
        xiaomi {
            <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//小米</SPAN>
        }
        wandoujia {
            <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">// 豌豆荚</SPAN>
        }
    }

    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//打包命名</SPAN>
    applicationVariants.all {
        variant -&gt;
            variant.outputs.each {
                output -&gt;

                    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义一个新的apk 名字。</SPAN>
                    <SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">// 新名字 = app 名字+ 渠道号 + 构建类型 + 版本号 + 当前构建时间</SPAN>
                    <SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">def</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">apkName</SPAN> </SPAN>= <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">"appName_${variant.flavorName}_${buildType.name}_v${variant.versionName}_${getTime()}.apk"</SPAN>;
                    output.outputFile = <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">new</SPAN> <SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">File</SPAN>(output.outputFile.parent, apkName);
            }
    }

}

<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//获取当前时间</SPAN>
<SPAN class=hljs-function style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px"><SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">def</SPAN> <SPAN class=hljs-title style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">getTime</SPAN></SPAN>() {
    <SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">String</SPAN> today = <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">new</SPAN> <SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Date</SPAN>().format(<SPAN class=hljs-symbol style="COLOR: rgb(0,176,232); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'YY</SPAN>年<SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">MM</SPAN>月dd日<SPAN class=hljs-type style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">HH</SPAN>时mm分')
    <SPAN class=hljs-keyword style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">return</SPAN> today
}
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果图如下：</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><IMG 
style="MAX-WIDTH: 900px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
alt=这里写图片描述 
src="http://img.blog.csdn.net/20170911200348513?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb3lhbmp1bjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></P>
<H2 id=task 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Task</H2>
<H3 id=定义-task 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">定义 
task</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs go" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义任务1</SPAN>
task task1&lt;&lt;{
    <SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">println</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'task1'</SPAN>
}

<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//定义任务2</SPAN>
task task2&lt;&lt;{
    <SPAN class=hljs-built_in style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">println</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'task2'</SPAN>
}</CODE></PRE>
<H3 id=mustrunafter-定义-task-执行顺序 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">mustRunAfter 
定义 task 执行顺序</H3><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs cpp" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-comment style="COLOR: green; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">//task2 的执行顺讯在 task1 之后</SPAN>
task2.mustRunAfter task1
</CODE></PRE>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">测试1 
  ： gradlew task1</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task1</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>

</CODE></PRE>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">测试2 
  ： gradlew task2</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task2</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN>

</CODE></PRE>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">测试3 
  ： gradlew task1 task2</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task1</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task2</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN>
</CODE></PRE>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">测试4 
  ： gradlew task2 task1</LI></UL>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task1</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task2</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN>
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><STRONG 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">结论</STRONG></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">如果单独执行 
task1 就只会执行 task1 的任务；单独执行 task2 就只会执行 task2 的任务；<BR 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">如果同时执行 
task1、task2 , 一定会先执行 task1 , 等 task1 执行完后，就会执行 task2 内容。</P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><STRONG 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">扩展</STRONG></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">上面 
mustRunAfter 我们还有一种写法，如下图所示：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN> {}<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.mustRunAfter</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">这个写法的效果和 
mustRunAfter 是一样的，当然我们还可以在 花括号里面写一些任务，比如 ：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-section style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN> {
    <SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">println</SPAN> <SPAN class=hljs-string style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">'我最先执行'</SPAN>
}.mustRunAfter task1
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">下面做个测试，测试命令如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">gradlew</SPAN> task2 task1

</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>我最先执行

<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task1</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task2</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN>
</CODE></PRE>
<H3 id=dependson-定义-task-依赖 
style="FONT-SIZE: 16px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">dependsOn 
定义 task 依赖</H3>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">task2 
任务依赖于 task1 ,执行 task2 就会先执行 task1</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN><SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.dependsOn</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">测试：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs nginx" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'>
<SPAN class=hljs-attribute style="COLOR: rgb(163,21,21); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">gradlew</SPAN> task2
</CODE></PRE>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px">效果如下：</P><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task1</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task1</SPAN>
<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:app</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:task2</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">task2</SPAN>
</CODE></PRE>
<H2 id=常用-gradlew-命令 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">常用 
Gradlew 命令</H2>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">1、gradlew 
  -v : 查看版本号</LI></UL><PRE style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; PADDING-RIGHT: 0px"><CODE class="hljs css" style='FONT-SIZE: 12px !important; BORDER-TOP: rgb(204,204,204) 1px solid; HEIGHT: auto; FONT-FAMILY: "Courier New", sans-serif !important; BORDER-RIGHT: rgb(204,204,204) 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: rgb(255,255,255); OVERFLOW-X: auto; BORDER-BOTTOM: rgb(204,204,204) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5px !important; PADDING-TOP: 5px !important; PADDING-LEFT: 5px !important; BORDER-LEFT: rgb(204,204,204) 1px solid; MARGIN: auto; DISPLAY: block; LINE-HEIGHT: 1.5 !important; PADDING-RIGHT: 5px !important; border-radius: 3px'><SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">------------------------------------------------------------</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Gradle</SPAN> 3<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.3</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">------------------------------------------------------------</SPAN>

<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Build</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">time</SPAN>:   2017<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">-01-03</SPAN> 15<SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:31</SPAN><SPAN class=hljs-selector-pseudo style="COLOR: rgb(43,145,175); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">:04</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">UTC</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Revision</SPAN>:     075893<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">a3d0798c0c1f322899b41ceca82e4e134b</SPAN>

<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Groovy</SPAN>:       2<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.4</SPAN><SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.7</SPAN>
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Ant</SPAN>:          <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Apache</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Ant</SPAN>(<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">TM</SPAN>) <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">version</SPAN> 1<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.9</SPAN><SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.6</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">compiled</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">on</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">June</SPAN> 29 2015
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">JVM</SPAN>:          1<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.8</SPAN><SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.0_112</SPAN> (<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Oracle</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Corporation</SPAN> 25<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.112-b15</SPAN>)
<SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">OS</SPAN>:           <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Windows</SPAN> 10 10<SPAN class=hljs-selector-class style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">.0</SPAN> <SPAN class=hljs-selector-tag style="COLOR: rgb(0,0,255); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">amd64</SPAN>

</CODE></PRE>
<UL 
style="WORD-BREAK: break-all; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 30px; PADDING-RIGHT: 0px">
  <LI 
  style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 1em; PADDING-RIGHT: 0px">2、gradlew 
  task ： 查看所有的 task</LI></UL>
<H2 id=参考资料 
style="FONT-SIZE: 21px; FONT-WEIGHT: bold; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">参考资料</H2>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><A 
style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="http://www.jianshu.com/p/80e1f4a80d06#">Android 利用Gradle实现差异化构建</A></P>
<P 
style="FONT-SIZE: 13px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 10px auto; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; TEXT-INDENT: 0px"><A 
style="TEXT-DECORATION: underline; COLOR: rgb(7,93,179); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px" 
href="http://www.jianshu.com/p/011b8d63ba78">杨海 
Android目录结构</A></P></DIV></DIV>
</BODY>
</HTML>
